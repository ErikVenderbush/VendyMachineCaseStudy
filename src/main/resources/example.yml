vm:
  base-url: http://localhost:8080
  oauth-uri: /auth/twitch/code
  client-id: your_client_id
  client-secret: your_client_secret
  redirect-uri: ${vm.base-url}${vm.oauth-uri}
  twitch-authorization-code-request: https://api.twitch.tv/kraken/oauth2/authorize?response_type=code&client_id=${vm.client-id}&redirect_uri=${vm.redirect-uri}&scope=user:read:email
  twitch-access-token-request: https://id.twitch.tv/oauth2/token?client_id=${vm.client-id}&client_secret=${vm.client-secret}&grant_type=authorization_code&redirect_uri=${vm.redirect-uri}&code=
  twitch-client-credentials-request: https://id.twitch.tv/oauth2/token?client_id=${vm.client-id}&client_secret=${vm.client-secret}&grant_type=client_credentials&scope=chat:read%20chat:edit
  twitch-base-endpoint: https://api.twitch.tv/helix
  test-token: access_token
  oauth-password: oauth:access_token
  gmail-account: gmail_address
  gmail-password: gmail_password

spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  
  # MySQL Database Setup
  datasource:
    url: jdbc:mariadb://localhost:3306/vendymachine?useLegacyDatetimeCode=false&autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: db_password
  flyway:
    enabled: false
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
  
  # Email Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: gmail_address
    password: gmail_password
    properties:
      mail:
        smtp:
          auth: plain
          starttls:
            enable: true
  
  # Tomcat Configuration
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp

# Tomcat Configuration
server:
  servlet:
    context-path: /
    encoding:
      charset: utf-8
      enabled: true
      force: true